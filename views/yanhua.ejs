<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>喜迎十九大</title>
    <link rel="stylesheet" href="/meeting.css">

</head>
<body onselectstart="return false;">
    <canvas id="cas" style="background-color: rgba(0,5,24,1)">浏览器不支持canvas</canvas>
    <div class="city">
        <img src="/img/city.png" alt="城市">
    </div>
    <img src="/img/moon.png" alt="月亮" id="moon" style="visibility: hidden;">
    <div style="display:none">
        <div class="shape">喜迎十九大</div>
        <div class="shape">十九大顺利召开</div>
        <div class="shape">厉害了我的国</div>
    </div>
    <div id="show_text"></div>
    <audio src="/music/boom.mp3" preload="auto"></audio>
    <audio src="/music/boom.mp3" preload="auto"></audio>
    <audio src="/music/boom.mp3" preload="auto"></audio>
    <audio src="/music/boom.mp3" preload="auto"></audio>
    <audio src="/music/boom.mp3" preload="auto"></audio>
    <audio src="/music/boom.mp3" preload="auto"></audio>
    <audio src="/music/shotfire.mp3" preload="auto"></audio>
    <audio src="/music/shotfire.mp3" preload="auto"></audio>
    <audio src="/music/shotfire.mp3" preload="auto"></audio>

    <script type="text/javascript" src="/js/meetingContent.js"></script>
    <script type="text/javascript">
        var canvas=document.getElementById('cas');
        var ocas=document.createElement('canvas');
        var octx=ocas.getContext('2d');
        var ctx=canvas.getContext('2d');
        ocas.width=canvas.width=window.innerWidth;
        ocas.height=canvas.height=window.innerHeight;
        var bigbooms=[];
        window.onload=function(){
            initAnimate();
        };
        function initAnimate(){
            drawBg();
            lastTime=new Date();
            animate();
        }
        //增加了对十九大核心报告逐字打印的效果显示
        var str_index= 0,start= 0,i=1;

        function show_text(){
            var show_text=document.getElementById('show_text');
            if(str_index==str.length){
                clearInterval(timer);
            }
//            console.log(str.substring(0,str_index));
            var char=str.substr(str_index,1);
            if(char === "|"){
                var p=document.createElement('p');
                p.title=i++;
//                p.innerText=str.substring(str_index,str_index++);
//                show_text.insertBefore(p,show_text.lastChild);//使用这个的问题是每次新增的元素作为第一个元素
                show_text.appendChild(p);
                start=str_index;
                str_index+=1;
            }else if(char != ""){
                var lastChild=show_text.lastChild;
                str_index+=1;
                lastChild.innerText=str.substring(start,str_index).replace('|','');
            }else{
                str_index++;
            }
//            document.getElementById('text').innerText=str.substring(0,str_index++);
        }
        var timer=setInterval(show_text,100);

        var lastTime;
        //实现动画效果
        var index=0;
        function animate(){
            ctx.save();
            ctx.globalCompositeOperation='destination-out';
            ctx.globalAlpha=0.1;
            ctx.fillRect(0,0,canvas.width,canvas.height);
            ctx.restore();
            var newTime=new Date();
            if(newTime-lastTime>200+(window.innerHeight-767)/2){
                var random=Math.random()*200>10?true:false;
                var x=getRandom(canvas.width/5,canvas.width*4/4);
                var y=getRandom(50,200);

                if(random){//爆炸烟花动画效果
                    var bigboom=new Boom(getRandom(canvas.width/3,canvas.width*2/3),2,'#FFF',{x:x,y:y});
                    bigbooms.push(bigboom);
                }else{//烟花爆炸出字体动画
//                    var bigboom=new Boom(getRandom(canvas.width/3,canvas.width*2/3),2,'#FFF',{
//                        x: canvas.width/2,
//                        y: 200
//                    },document.querySelectorAll('.shape')[parseInt(getRandom(0,document.querySelectorAll('.shape').length))]);
                    var bigboom=new Boom(getRandom(canvas.width/3,canvas.width*2/3),2,'#FFF',{
                        x: canvas.width/2,
                        y: 200
                    },document.querySelectorAll('.shape')[index]);
                    if(index<document.querySelectorAll('.shape').length){
                        index++;
                    }else{
                        index=0;
                    }
                    bigbooms.push(bigboom);
                }
                lastTime=newTime;
            }
            starts.forEach(function(){
                this.paint();
            });
            drawMoon();
            bigbooms.forEach(function(index){
                var that=this;
                if(!this.dead){//没有炸的烟花-移动，画出轨迹
                    this._move();
                    this._drawLight();
                }else{
                    this.booms.forEach(function(index){
                        if(!this.dead){
                            this.movoTo(index);//烟花的爆炸粒子移动动画
                        }else if(index===that.booms.length-1){
                            bigbooms.splice(bigbooms.indexOf(that),1);//把该爆炸的烟花从烟花数组中移除
                        }
                    });
                }
            });
            raf(animate);
        }
        //画出月亮
        function drawMoon(){
            var moon=document.getElementById('moon');
            var centerX=canvas.width-200,centerY=100,width=80;
            if(moon.complete){
                ctx.drawImage(moon,centerX,centerY,width,width);
            }else{
                moon.onload=function(){
                    ctx.drawImage(moon,centerX,centerY,width,width);
                }
            }
            var index=0;
            for(var i=0;i<10;i++){
                ctx.save();
                ctx.beginPath();
                ctx.arc(centerX+width/2,centerY+width/2,width/2+index,0,2*Math.PI);
                ctx.fillStyle='rgba(240,219,120,0.005)';
                index+=2;
                ctx.fill();
                ctx.restore();
            }
        }
        Array.prototype.forEach=function(callback){
            for(var i=0;i<this.length;i++){
                if(this[i]!=null){
                    callback.apply(this[i],[i]);
                }
            }
        };
        //设置动画频率
        var raf=window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame
                || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback){
                    window.setTimeout(callback,1000/60);
                };
        canvas.onclick=function(){
            var x=event.clientX;
            var y=event.clientY;
            var bigboom=new Boom(getRandom(canvas.width/3,canvas.width*2/3),2,'#FFF',{x:x,y:y});
            bigbooms.push(bigboom);
        };
        //烟花类
        var Boom=function(x,r,c,boomArea,shape){
            this.booms=[];
            this.x=x;
            this.y=(canvas.height+r);
            this.r=r;
            this.c=c;
            this.shape=shape || false;
            this.boomArea=boomArea;
            this.theta=0;
            this.dead=false;
            this.ba=parseInt(getRandom(80,200));

            var audio=document.getElementsByTagName('audio');
            for(var i=0;i<audio.length;i++){
                if(audio[i].src.indexOf('shotfire')>=0 && (audio[i].paused || audio[i].ended)){
                    audio[i].play();
                    break;
                }
            }
        };
        Boom.prototype={
            _paint: function(){
                ctx.save();
                ctx.beginPath();
                ctx.arc(this.x,this.y,this.r,0,2*Math.PI);
                ctx.fillStyle=this.c
                ctx.fill();
                ctx.restore();
            },
            _move: function(){
                var dx=this.boomArea.x-this.x,dy=this.boomArea.y-this.y;
                this.x=this.x+dx*0.01;
                this.y=this.y+dy*0.01;

                if(Math.abs(dx)<=this.ba && Math.abs(dy)<=this.ba){
                    if(this.shape){
                        this._shapBoom();
                    }else{
                        this._boom();
                    }
                    this.dead=true;
                }else{
                    this._paint();
                }
            },
            _drawLight: function(){
                ctx.save();
                ctx.fillStyle='rgba(255,228,150,0.3)';
                ctx.beginPath();
                ctx.arc(this.x,this.y,this.r+3*Math.random()+1,0,2*Math.PI);
                ctx.fill();
                ctx.restore();
            },
            _boom: function(){
                var fragNum=getRandom(100,300);
                var style=getRandom(0,10)>5?1:2;
                var color;
                if(style===1){
                    color={
                        a: parseInt(getRandom(128,255)),
                        b: parseInt(getRandom(128,255)),
                        c: parseInt(getRandom(128,255))
                    }
                }
                var fanwei=fragNum;
                var audio=document.getElementsByTagName('audio');
                for(var i=0;i<audio.length;i++){
                    if(audio[i].src.indexOf('boom')>=0 && (audio[i].paused || audio[i].ended)){
                        audio[i].play();
                        break;
                    }
                }
                for(var i=0;i<fragNum;i++){
                    if (style === 2) {
                        color = {
                            a: parseInt(getRandom(128, 255)),
                            b: parseInt(getRandom(128, 255)),
                            c: parseInt(getRandom(128, 255))
                        }
                    }
                    var a=getRandom(-Math.PI,Math.PI);
                    var x=getRandom(0,fanwei)*Math.cos(a)+this.x;
                    var y=getRandom(0,fanwei)*Math.sin(a)+this.y;
                    var radius=getRandom(0,2);
                    var frag=new Frag(this.x,this.y,radius,color,x,y);
                    this.booms.push(frag);
                }
            },
            _shapBoom: function(){
                var that=this;
                putValue(ocas,octx,this.shape,5,function(dots){
                    var dx=canvas.width/2 - that.x;
                    var dy=canvas.height/2-that.y;
                    for(var i=0;i<dots.length;i++){
                        color={
                            a: dots[i].a,
                            b: dots[i].b,
                            c: dots[i].c
                        };
                        var x=dots[i].x;
                        var y=dots[i].y;
                        var radius=1;
                        var frag=new Frag(that.x,that.y,radius,color,x,y);
                        that.booms.push(frag);
                    }
                });
            }
        };

        function putValue(canvas,context,ele,dr,callback){
            context.clearRect(0,0,canvas.width,canvas.height);
            var img=new Image();
            if(ele.innerHTML.indexOf('img')>=0){
                img.src=ele.getElementsByTagName('img')[0].src;
                imgLoad(img,function(){
                    context.drawImage(img,canvas.width/2-img.width/2,canvas.height/2-img.width/2);
                    dots=getimgData(canvas,context,dr);
                    callback(dots);
                });
            }else{
                //显示字体
                var text = ele.innerHTML;
                context.save();
                var fontSize = 200;
                context.font = fontSize + "px 宋体 bold";
                context.textAlign = "center";
                context.textBaseline = "middle";
                context.fillStyle = "rgba(" + parseInt(getRandom(0, 255)) + "," + parseInt(getRandom(0, 255)) + "," + parseInt(getRandom(0, 255)) + " , 1)";
                context.fillText(text, canvas.width / 2, canvas.height / 2);
                context.restore();
                dots = getimgData(canvas, context, dr);
                callback(dots);
            }
        }
        function imgLoad(img,callback){
            if(img.complete){
                callback.call(img);
            }else{
                img.onload=function(){
                    callback.call(this);
                }
            }
        }
        function getimgData(canvas,content,dr){
            var imgData=content.getImageData(0,0,canvas.width,canvas.height);
            content.clearRect(0,0,canvas.width,canvas.height);
            var dots=[];
            for(var x=0;x<imgData.width;x+=dr){
                for(var y=0;y<imgData.height;y+=dr){
                    var i=(y * imgData.width+x)*4;
                    if(imgData.data[i+3]>128){
                        var dot={
                            x: x,
                            y: y,
                            a: imgData.data[i],
                            b: imgData.data[i+1],
                            c: imgData.data[i+2]
                        };
                        dots.push(dot);
                    }
                }
            }
            return dots;
        }
        //获取两个数间的随机数
        function getRandom(a,b){
            return Math.random()*(b-a)+a;
        }
        var maxRadius= 1,starts=[];
        function drawBg(){
            for(var i=0;i<100;i++){
                var r=Math.random()*maxRadius;
                var x=Math.random()*canvas.width;
                var y=Math.random()*canvas.height;
                var start=new Start(x,y,r);
                starts.push(start);
                start.paint();
            }
        }
        var Start=function(x,y,r){
           this.x=x;
            this.y=y;
            this.r=r;
        };
        Start.prototype={
            paint:function(){
                ctx.save();
                ctx.beginPath();
                ctx.arc(this.x,this.y,this.r,0,2*Math.PI);
                ctx.fillStyle='rgba(255,255,255,'+this.r+')';
                ctx.fill();
                ctx.restore();
            }
        };
        var focallength=250;
        var Frag=function(centerX,centerY,radius,color,tx,ty){
            this.tx=tx;
            this.ty=ty;
            this.x=centerX;
            this.y=centerY;
            this.dead=false;
            this.centerX=centerX;
            this.centerY=centerY;
            this.radius=radius;
            this.color=color;
        };
        Frag.prototype={
            paint: function(){
                ctx.fillStyle='rgba('+this.color.a+','+this.color.b+','+this.color.c+',1)';
                ctx.fillRect(this.x-this.radius,this.y-this.radius,this.radius*2,this.radius*2);
            },
            movoTo: function(index){
                this.ty=this.ty+0.3;
                var dx=this.tx-this.x,dy=this.ty-this.y;
                this.x=Math.abs(dx)<0.1?this.tx:(this.x+dx*0.1);
                this.y=Math.abs(dy)<0.2?this.ty:(this.y+dy*0.1);
                if(dx===0 && Math.abs(dy)<=80){
                    this.dead=true;
                }
                this.paint();
            }
        };
    </script>
</body>
</html>